{"version":3,"sources":["components/Menu.js","actions/index.js","components/Product.js","components/ProductList.js","components/ProductForm.js","components/LoginForm.js","components/RegisterForm.js","components/EditForm.js","components/Board.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","to","React","Component","deleteProduct","product","dispatch","fetch","id","method","headers","window","localStorage","getItem","then","res","json","data","type","storeProductData","Product","handleOnClickEdit","props","item","_id","name","image","history","push","handleOnClickDelete","console","log","this","src","alt","onClick","withRouter","connect","ProductList","products","productList","map","prod","key","state","ProductForm","event","preventDefault","value","body","JSON","stringify","newProduct","onSubmit","e","htmlFor","ref","required","class","LoginForm","user","email","password","setItem","authToken","location","href","classemail","alert","EditForm","editFormData","editProduct","target","onChange","handleChange","defaultValue","PrivateRoute","component","path","rest","Board","RegisterForm","exact","initialState","middlewares","thunk","createStore","action","Object","assign","filter","element","applyMiddleware","App","store","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc06af1e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Menu.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Menu extends React.Component {\n  render() {\n    return (\n      <div className=\"Menu\">\n\n        <Link to=\"/addProduct\"><button className=\"menu-button\">Add Product</button></Link>\n        <Link to=\"/\"><button className=\"menu-button\">Inventory</button></Link>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const EDIT_PRODUCT = \"EDIT_PRODUCT\";\nexport const STORE_PRODUCT_DATA = \"STORE_PRODUCT_DATA\";\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\nexport const LOGIN = \"LOGIN\";\nexport const REGISTER = \"REGISTER\";\n\nconst API_URL = \"http://localhost:3001\"\n\n\n\nexport const registerUser = user => (dispatch) => {\n\n  fetch(`/users/register`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  })\n    .then((res) => res.json())\n    .then((data) => {\n\n      alert(\"registration Successfull\");\n      window.location.href = \"/login\"\n\n\n\n    });\n};\n\nexport const loginUser = user => (dispatch) => {\n\n  fetch(`/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      window.localStorage.setItem('auth-token', data.authToken)\n      window.location.href = '/';\n\n    });\n};\n\n\n\nexport const getProducts = () => (dispatch) => {\n\n  fetch(`/products`, {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${window.localStorage.getItem('auth-token')}`\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {\n\n      dispatch({\n        type: GET_PRODUCTS,\n        products: data.products\n      })\n\n    });\n};\n\nexport const addProduct = product => (dispatch) => {\n\n  fetch(`/products`, {\n    method: 'POST',\n    body: JSON.stringify(product),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${window.localStorage.getItem('auth-token')}`\n    }\n  })\n    .then((res) => res.json())\n    .then((data) => {\n\n      dispatch({\n        type: ADD_PRODUCT,\n        product: data.newProduct\n      })\n\n    });\n};\n\nexport const deleteProduct = product => (dispatch) => {\n\n  fetch(`/products/${product.id}`, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${window.localStorage.getItem('auth-token')}`\n    }\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({\n        type: DELETE_PRODUCT,\n        id: product.id\n      });\n    });\n}\n\nexport const editProduct = (id, product) => (dispatch) => {\n\n  fetch(`/products/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(product),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${window.localStorage.getItem('auth-token')}`\n    }\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({\n        type: EDIT_PRODUCT,\n        product: data.product\n      });\n    });\n}\n\n\n\nexport const storeProductData = product => ({\n  type: STORE_PRODUCT_DATA,\n  product\n});","import React from \"react\";\nimport \"./Product.css\";\nimport { connect } from \"react-redux\";\n// import { Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { storeProductData, deleteProduct } from \"../actions\";\n\nclass Product extends React.Component {\n  // handleOnClick() {\n  //   console.log(this.props.item.id)\n  //   // this.props.dispatch(storeProductData({ id, name, image }));\n  // \n  handleOnClickEdit = () => {\n    // console.log(this.props.item.id, this.props.item.name, this.props.item.image)\n    const id = this.props.item._id;\n    const name = this.props.item.name;\n    const image = this.props.item.image;\n    this.props.dispatch(storeProductData({ _id: id, name, image }\n    ));\n    this.props.history.push(\"/edit\");\n    // return (<Redirect to=\"/edit\" />)\n  }\n\n  handleOnClickDelete = () => {\n    console.log(this.props.item.id, this.props.item.name, this.props.item.image)\n    const id = this.props.item._id;\n    const name = this.props.item.name;\n    const image = this.props.item.image;\n    this.props.dispatch(deleteProduct({ id, name, image }));\n    this.props.history.push(\"/\");\n    // return (<Redirect to=\"/edit\" />)\n  }\n\n  render() {\n    const itemlink = `/edit/${this.props.item._id}`\n    return (\n      <div className=\"Product\">\n        <img src={this.props.item.image} alt={this.props.item.name} />\n        <p className=\"id\">{this.props.item._id}</p>\n        <p className=\"id\">{this.props.item.name}</p>\n        {/* <Link to={itemlink} onClick={this.handleOnClick}><button>Edit</button></Link> */}\n        <button onClick={this.handleOnClickEdit}>Edit</button>\n        <button onClick={this.handleOnClickDelete}>Delete</button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect()(Product));\n\n\n// onClick edit button, create function to dispatch an action\n// Create an action and reducer\n// Redirect to edit form page","import React from \"react\";\n// import { Route } from \"react-router-dom\";\nimport Product from \"./Product\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getProducts } from '../actions';\nimport \"./ProductList.css\";\n\n\nclass ProductList extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(getProducts())\n  }\n  render() {\n    console.log(this.props.productList)\n    const products = this.props.productList.map(prod => {\n      return (\n        <li key={prod._id}>\n          <Product item={prod}></Product>\n        </li>\n      );\n    });\n    return (\n      <div className=\"ProductList\">\n        <ul>{products}</ul>\n        <Link to=\"/addProduct\"><button>Add Product</button></Link>\n      </div>\n    );\n  }\n}\n\n\nexport const mapStateToProps = state => ({\n  productList: state.productList\n});\n\nexport default connect(mapStateToProps)(ProductList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import Input from \"./Input\";\n// import { reduxForm, Field } from 'redux-form';\nimport { addProduct } from \"../actions\";\nimport \"./ProductForm.css\";\n\nclass ProductForm extends React.Component {\n  onSubmit(event) {\n    event.preventDefault();\n    const name = this.name.value;\n    const image = this.image.value;\n    this.props.dispatch(addProduct({ name, image }));\n    this.image.value = '';\n    this.props.history.push(\"/\"); // Redirects to the root path\n  }\n\n  render() {\n\n    return (\n      // Convert to Redux Form when using API or skip\n      <div className=\"formWrapper\">\n        <form className=\"productForm\" onSubmit={e => this.onSubmit(e)}>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n            ref={name => (this.name = name)}\n            required\n          ></input>\n          <br />\n          <label htmlFor=\"image\">Image</label>\n          <input\n            name=\"image\"\n            id=\"image\"\n            type=\"text-area\"\n            ref={image => (this.image = image)}\n            required\n          ></input>\n          <br />\n          <button type=\"submit\" class=\"form-button\">Add</button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nexport default connect()(ProductForm);\n\n// export default reduxForm({\n//   form: 'product'\n// })(ProductForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import Input from \"./Input\";\n// import { reduxForm, Field } from 'redux-form';\nimport { loginUser } from \"../actions\";\nimport \"./ProductForm.css\";\n\nclass LoginForm extends React.Component {\n  onSubmit(event) {\n    event.preventDefault();\n    const email = this.email.value;\n    const password = this.password.value;\n    this.props.dispatch(loginUser({ email, password }));\n    this.password.value = '';\n    this.props.history.push(\"/\"); // Redirects to the root path\n  }\n\n  render() {\n\n    return (\n      // Convert to Redux Form when using API or skip\n      <div classemail=\"formWrapper\">\n        <form classemail=\"productForm\" onSubmit={e => this.onSubmit(e)}>\n          <label htmlFor=\"email\">email</label>\n          <input\n            name=\"email\"\n            id=\"email\"\n            type=\"text\"\n            ref={email => (this.email = email)}\n            required\n          ></input>\n          <br />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n            ref={password => (this.password = password)}\n            required\n          ></input>\n          <br />\n          <button type=\"submit\" class=\"form-button\">Add</button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nexport default connect()(LoginForm);\n\n// export default reduxForm({\n//   form: 'product'\n// })(ProductForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import Input from \"./Input\";\n// import { reduxForm, Field } from 'redux-form';\nimport { registerUser } from \"../actions\";\nimport \"./ProductForm.css\";\n\nclass ProductForm extends React.Component {\n  onSubmit(event) {\n    event.preventDefault();\n    const email = this.email.value;\n    const password = this.password.value;\n    this.props.dispatch(registerUser({ email, password }));\n    this.password.value = '';\n    this.props.history.push(\"/\"); // Redirects to the root path\n  }\n\n  render() {\n\n    return (\n      // Convert to Redux Form when using API or skip\n      <div classemail=\"formWrapper\">\n        <form classemail=\"productForm\" onSubmit={e => this.onSubmit(e)}>\n          <label htmlFor=\"email\">email</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            ref={email => (this.email = email)}\n            required\n          ></input>\n          <br />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            ref={password => (this.password = password)}\n            required\n          ></input>\n          <br />\n          <label htmlFor=\"confirm_password\">Confirm Password</label>\n          <input\n            id=\"password\"\n            name=\"confirm password\"\n            type=\"password\"\n            ref={password => (this.password = password)}\n            required\n          ></input>\n          <button type=\"submit\" class=\"form-button\">Submit</button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nexport default connect()(ProductForm);\n\n// export default reduxForm({\n//   form: 'product'\n// })(ProductForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { editProduct } from \"../actions\";\nimport { withRouter } from \"react-router\";\nimport \"./ProductForm.css\";\n\nclass EditForm extends React.Component {\n  onSubmit(event) {\n    event.preventDefault();\n    const name = this.name.value;\n    const image = this.image.value;\n    const id = this.props.editFormData._id\n    console.log(id)\n    this.props.dispatch(editProduct(id, { name, image }));\n    this.props.history.push(\"/\"); // Redirects to the root path\n  }\n\n  handleChange(e) {\n    // Should I change this?\n    console.log(e.target.value);\n  }\n\n  render() {\n    // Get product from redux state\n    // let productId = this.match.params.id\n    console.log(\"EditForm.render this.props\", this.props)\n    return (\n      // Convert to Redux Form when using API\n      <div className=\"formWrapper\">\n        <form className=\"productForm\" onSubmit={e => this.onSubmit(e)}>\n          <label htmlFor=\"name\">name</label>\n          <input\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n            ref={name => (this.name = name)}\n            onChange={this.handleChange}\n            defaultValue={this.props.editFormData.name}\n            required\n          ></input>\n          <br />\n          <label htmlFor=\"image\">Image</label>\n          <input\n            name=\"image\"\n            id=\"image\"\n            type=\"text-area\"\n            ref={image => (this.image = image)}\n            defaultValue={this.props.editFormData.image}\n            required\n          ></input>\n          <br />\n          <button type=\"submit\" class=\"form-button\">Add</button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  productList: state.productList,\n  editFormData: state.editFormData\n});\n\nexport default withRouter(connect(mapStateToProps)(EditForm));\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport ProductList from \"./ProductList\";\nimport ProductForm from \"./ProductForm\";\nimport LoginForm from \"./LoginForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport EditForm from \"./EditForm\";\nimport Product from \"./Product\";\nimport \"./Board.css\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n\n  if (!window.localStorage.getItem('auth-token')) {\n    return <Redirect to=\"/login\" />\n  } else {\n    return <>\n      <Menu></Menu>\n      <Route path={path} component={Component} {...rest} />\n    </>\n  }\n\n}\nclass Board extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   // const productList = props.productList;\n  // }\n\n  render() {\n    return (\n      <div className=\"Board\">\n        <Switch>\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/register\" component={RegisterForm} />\n          <PrivateRoute exact path=\"/product\" component={Product} />\n          <PrivateRoute exact path=\"/\" component={ProductList} />\n          <PrivateRoute path=\"/addProduct\" component={ProductForm} />\n          <PrivateRoute path='/edit' component={EditForm} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import { ADD_PRODUCT, EDIT_PRODUCT, STORE_PRODUCT_DATA, DELETE_PRODUCT, GET_PRODUCTS } from \"../actions/index.js\";\n\nconst initialState = {\n  // add edit form data\n  editFormData: {},\n  productList: [\n    {\n      id: 3211,\n      name: \"red t-shirt\",\n      image:\n        \"https://imageprod65.hobbylobby.com/sys-master/migrated/h06/h48/h00/8998682099742/422790_3[5].jpg\"\n    },\n    {\n      id: 1112,\n      name: \"blue t-shirt\",\n      image:\n        \"https://cdn.ccs.com/media/catalog/product/cache/4/image/9df78eab33525d08d6e5fb8d27136e95/e/n/enjoi-doesn-t-fit-t-shirt-royal-blue-2.1506663643.jpg\"\n    }\n  ]\n};\n\nexport const productReducer = (state = initialState, action) => {\n  if (action.type === ADD_PRODUCT) {\n    return Object.assign({}, state, {\n      productList: [...state.productList, action.product]\n    });\n  }\n\n  if (action.type === GET_PRODUCTS) {\n    return Object.assign({}, state, {\n      productList: action.products\n    });\n  }\n\n  if (action.type === EDIT_PRODUCT) {\n    //Use map to find product matchx\n    const productList = state.productList.map(product => {\n      if (product._id === action.product._id) {\n        return action.product;\n      }\n      else {\n        return product;\n      }\n    })\n    return Object.assign({}, state, {\n      productList\n    });\n  }\n  if (action.type === STORE_PRODUCT_DATA) {\n    return Object.assign({}, state, {\n      editFormData: action.product\n    });\n  }\n  if (action.type === DELETE_PRODUCT) {\n    console.log(action, state.productList)\n    return Object.assign({}, state, {\n      productList: state.productList.filter(element => element._id !== action.id)\n    });\n  }\n\n  // \n\n  return state;\n};\n","import { createStore, applyMiddleware } from \"redux\";\n// import { reducer as formReducer } from \"redux-form\";\nimport thunk from 'redux-thunk';\nimport { productReducer } from \"./reducers\";\n\nconst middlewares = [thunk]\n\n// Do I need form reducer here?\n// Combine reducers breaks the rest of the program\n\nexport default createStore(\n  productReducer,\n  applyMiddleware(...middlewares)\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// export default createStore(\n//   combineReducers({\n//     form: formReducer,\n//     product: productReducer\n//   })\n// )\n","import React from \"react\";\nimport Board from \"./components/Board.js\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <BrowserRouter>\n          <Board />\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}